# angular :: azure-devops

stages:
- stage: build
  displayName: build
  jobs:
  - job: build_angular
    displayName: build::angular
    pool:
      vmImage: ubuntu-18.04
    steps:
    - task: UseNode@1
      inputs:
        version: '12.13'
      displayName: node
    - script: npm clean-install
      displayName: npm install
      workingDirectory: FlashCard
    - script: npm run build
      displayName: npm build
      workingDirectory: FlashCard
    - script: npm test
      displayName: npm test
      workingDirectory: FlashCard
    - script: npm run inspect --
        -Dsonar.pullrequest.base=$SYSTEM_PULLREQUEST_TARGETBRANCH
        -Dsonar.pullrequest.branch=$SYSTEM_PULLREQUEST_SOURCEBRANCH
        -Dsonar.pullrequest.github.repository=$BUILD_REPOSITORY_NAME
        -Dsonar.pullrequest.key=$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
        -Dsonar.pullrequest.provider=$BUILD_REPOSITORY_PROVIDER
      displayName: npm inspect::pull-request
      condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
      workingDirectory: FlashCard
      env:
        SONAR_LOGIN: $(SONAR_LOGIN)
    - script: npm run inspect -- -Dsonar.branch.name=$BUILD_SOURCEBRANCHNAME
      displayName: npm inspect::branch
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      workingDirectory: FlashCard
      env:
        SONAR_LOGIN: $(SONAR_LOGIN)

- stage: pack_angular
  displayName: pack_angular
  dependsOn: build
  condition: and(succeeded('build'), or(
    eq(variables['Build.SourceBranch'], 'refs/heads/master'),
    startsWith(variables['Build.SourceBranch'], 'refs/tags')))
  jobs:
  - job: pack_angular
    displayName: pack::angular
    pool:
      vmImage: ubuntu-18.04
    steps:
    - task: Docker@2
      displayName: docker login
      inputs:
        command: login
        containerRegistry: rlguzman-docker
    - script: |
        set -e
        docker image build -f .docker/client.dockerfile -t flashcard_card ./FlashCard/
        docker image tag flashcard_card rlguzman/flashcard_client:dev
        docker image push rlguzman/flashcard_client:dev
      displayName: docker push::dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    - task: Docker@2
      displayName: docker logout
      inputs:
        command: logout
        containerRegistry: rlguzman-docker
